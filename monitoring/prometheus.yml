# Prometheus Configuration for HPA Platform
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'hpa-platform'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []
          # - 'alertmanager:9093'

# Load rules once and periodically evaluate them
rule_files:
  # - '/etc/prometheus/rules/*.yml'

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # Backend API metrics
  - job_name: 'backend'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['backend:8080']
        labels:
          service: 'backend'
          component: 'api'

  # Frontend metrics (if exposed)
  - job_name: 'frontend'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['frontend:3000']
        labels:
          service: 'frontend'
          component: 'web'

  # Agent metrics
  - job_name: 'agent'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['agent:8080']
        labels:
          service: 'agent'
          component: 'cluster-agent'

  # PostgreSQL exporter (if using postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgres'
          component: 'database'

  # Redis exporter (if using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'
          component: 'cache'

  # Nginx metrics (if nginx-prometheus-exporter is used)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
        labels:
          service: 'nginx'
          component: 'proxy'

  # Node exporter for host metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'
          component: 'host'

  # Docker daemon metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-host:9323']
        labels:
          service: 'docker'
          component: 'container-runtime'

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
          component: 'visualization'

  # Kubernetes metrics (if in K8s environment)
  # - job_name: 'kubernetes-apiservers'
  #   kubernetes_sd_configs:
  #     - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #     - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #       action: keep
  #       regex: default;kubernetes;https

  # Custom application metrics
  - job_name: 'application'
    metrics_path: '/api/metrics'
    static_configs:
      - targets: ['backend:8080']
        labels:
          service: 'application'
          component: 'business-logic'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'hpa_.*'
        action: keep