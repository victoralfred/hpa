# HPA Agent Dockerfile
# This file should be built from the root directory of the project
# Build command: docker build -f Dockerfile.agent -t hpa-agent:latest .

# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git make gcc musl-dev protobuf protobuf-dev

# Set working directory
WORKDIR /build

# Copy go mod files from hpa-agent directory
COPY hpa-agent/go.mod hpa-agent/go.sum* ./

# Copy backend proto file
COPY backend/scalars/modules/cluster/agent.proto /tmp/agent.proto

# Copy hpa-agent source code
COPY hpa-agent/ ./

# Setup proto file with correct package
RUN mkdir -p api/cluster && \
    cp /tmp/agent.proto api/cluster/ && \
    sed -i 's|option go_package = .*|option go_package = "github.com/voseghale/hpa-agent/api/cluster";|' api/cluster/agent.proto

# Download and verify dependencies
RUN go mod download && \
    go mod tidy && \
    go mod verify

# Verify proto files are present (use existing generated files if available)
RUN ls -la api/cluster/ || true

# Build the production agent binary using demo_client as the main entry point
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s -X github.com/voseghale/hpa-agent/pkg/version.Version=1.0.0 \
    -X github.com/voseghale/hpa-agent/pkg/version.BuildTime=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
    -o hpa-agent cmd/demo_client/main.go

# Runtime stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata wget

# Create non-root user
RUN addgroup -g 1000 agent && \
    adduser -D -u 1000 -G agent agent

# Create necessary directories
RUN mkdir -p /app/config /app/logs /app/certs && \
    chown -R agent:agent /app

# Set working directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /build/hpa-agent /app/hpa-agent

# Copy configuration template
COPY --from=builder /build/config/agent.example.yaml /app/config/agent.example.yaml

# Switch to non-root user
USER agent
# Environment variables with production defaults
ENV LOG_LEVEL=info \
    CLUSTER_ID="" \
    CLUSTER_NAME="" \
    TENANT_ID="" \
    HPA_GRPC_ENDPOINT=backend:50051 \
    HPA_TLS_ENABLED=false \
    HPA_TLS_SKIP_VERIFY=false \
    FASTPATH_ENABLED=true \
    DEBUG=false \
    PPROF_ENABLED=false \
    TRACE_ENABLED=false

# Health check endpoint
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Volume for logs and configs
VOLUME ["/app/logs", "/app/config", "/app/certs"]

# Run the agent with command line flags
ENTRYPOINT ["/app/hpa-agent"]

# Default arguments (can be overridden)
CMD ["-endpoint", "backend:50051", \
     "-cluster", "docker-cluster", \
     "-tenant", "default", \
     "-token", "demo-token"]